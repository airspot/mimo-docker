version: '3'
services:
  redis:
    image: "redis:alpine"
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - ./redis:/data
  db:
    image: postgres
    restart: always
    env_file:
      - production.vars
    volumes:
      - ./tmp/postgres:/var/lib/postgresql/data
  api:
    restart: always
    image: "ohmimo/mimo-api:latest"
    env_file:
      - production.vars
    command: bash -c "sleep 10 && bundle exec rake db:create && rake db:migrate && bundle exec rake production:bootstrap && bundle exec rake assets:precompile && bundle exec puma -C /myapp/config/puma.rb"
    depends_on:
      - redis
      - db
    volumes:
        - shared-volume:/etc/mimo

  worker:
    restart: always
    image: "ohmimo/mimo-worker"
    env_file:
      - production.vars
    environment:
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - REDIS_HOST=redis
    command: bash -c "sidekiq"
    depends_on:
      - db
      - api
      - redis

  dashboard:
    restart: always
    image: "ohmimo/mimo-dashboard"
    env_file:
      - production.vars
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=dashboard.wisp.services
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=dashboard.wisp.services
      - LETSENCRYPT_EMAIL=simon@polkaspots.com
      - LETSENCRYPT_TEST=true
    # ports:
    #   - "8082:8080"
    depends_on:
      - api
    volumes:
        - shared-volume:/etc/mimo

  nginx:
    restart: always
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    image: 'ohmimo/mimo-nginx'
    #image: nginx:alpine
    ports:
     - "80:8080"
     - "443:8443"
    depends_on:
      - api
    command: "nginx -g 'daemon off;'"
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'

  nginx-gen:
    build: ./docker-gen/
    container_name: nginx-docker-gen
    restart: always
    # depends_on:
    #   - nginx
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
      - '/var/run/docker.sock:/tmp/docker.sock:ro'

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-docker-gen
      - NGINX_PROXY_CONTAINER=nginx
    depends_on:
      - nginx-gen
      - nginx

volumes:
  shared-volume:
  nginx-config:
  nginx-certs:
  nginx-vhosts:
  nginx-webroot:

