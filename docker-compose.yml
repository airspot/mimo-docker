version: '3'
services:
  redis:
    image: "redis:alpine"
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - ./redis:/data
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=mimo-api
      - POSTGRES_DB=mimo-api
    volumes:
      - ./tmp/postgres:/var/lib/postgresql/data
  api:
    restart: always
    image: "ohmimo/mimo-api"
    environment:
      - POSTGRES_DB=mimo-api
      - POSTGRES_HOST=db
      - POSTGRES_USER=mimo-api
      - POSTGRES_PASSWORD=password
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - MIMO_DASHBOARD_URL=http://mimo.dashboard:8080
    # ports:
    #   - "3030:3000"
    command: bash -c "sleep 10 && bundle exec rake db:create && rake db:migrate && bundle exec rake production:bootstrap && bundle exec rake assets:precompile && bundle exec puma -C /myapp/config/puma.rb"
    depends_on:
      - redis
      - db
    volumes:
        - shared-volume:/etc/mimo

  worker:
    restart: always
    image: "ohmimo/mimo-worker"
    environment:
      - POSTGRES_DB=mimo-api
      - POSTGRES_HOST=db
      - POSTGRES_USER=mimo-api
      - POSTGRES_PASSWORD=password
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - REDIS_HOST=redis
    command: bash -c "sidekiq"
    depends_on:
      - db
      - api
      - redis

  dashboard:
    restart: always
    image: "ohmimo/mimo-dashboard"
    environment:
      - MIMO_API_URL=http://0.0.0.0:3030
      - NODE_ENV=production
      - APP_ID=a609bc64f74b725c967b9c3944d6c9c1b2cdc40e34f744bf21c45f2697277157
      - APP_SECRET=f63d710ad138dde5ea295fc4d6e7c3efbd2bca9ca0bc33a05679a6e761a0a8c0
      - MIMO_DASHBOARD_URL=http://mimo.dashboard:8080
    # ports:
    #   - "8082:8080"
    depends_on:
      - api
    volumes:
        - shared-volume:/etc/mimo

  web:
    restart: always
    image: 'ohmimo/mimo-nginx'
    ports:
     - "8080:8080"
    depends_on:
      - api
    command: "nginx -g 'daemon off;'"

volumes:
  shared-volume: 
