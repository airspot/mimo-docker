version: '3'
services:
  redis:
    image: "redis:alpine"
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - ./db/redis:/data
  db:
    image: postgres
    restart: always
    env_file:
      - production.vars
    volumes:
      - ./db/postgres:/var/lib/postgresql/data

  nginx:
    restart: always
    container_name: nginx
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    image: 'nginx:alpine'
    ports:
     - "80:80"
     - "443:443"
    depends_on:
      - db
    volumes:
      - 'nginx-config:/etc/nginx/conf.d'
      - 'nginx-certs:/etc/nginx/certs'
      - 'nginx-vhosts:/etc/nginx/vhost.d'
      - 'nginx-webroot:/usr/share/nginx/html'

  # nginx-gen:
  #   build: ./docker-gen/
  #   container_name: nginx-docker-gen
  #   restart: always
  #   labels:
  #     - com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen
  #   volumes:
  #     - 'nginx-config:/etc/nginx/conf.d'
  #     - 'nginx-certs:/etc/nginx/certs'
  #     - 'nginx-vhosts:/etc/nginx/vhost.d'
  #     - 'nginx-webroot:/usr/share/nginx/html'
  #     - '/var/run/docker.sock:/tmp/docker.sock:ro'
  #   depends_on:
  #     - nginx
  #   command: -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  # letsencrypt-nginx-proxy-companion:
  #   restart: always
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt-nginx-proxy-companion
  #   volumes:
  #     - 'nginx-config:/etc/nginx/conf.d'
  #     - 'nginx-certs:/etc/nginx/certs'
  #     - 'nginx-vhosts:/etc/nginx/vhost.d'
  #     - 'nginx-webroot:/usr/share/nginx/html'
  #     - '/var/run/docker.sock:/var/run/docker.sock:ro'
  #   environment:
  #     - NGINX_DOCKER_GEN_CONTAINER=nginx-docker-gen
  #     - NGINX_PROXY_CONTAINER=nginx
  #   # depends_on:
  #   #   - nginx-gen
  #   #   - api 
  #   #   - db

  api:
    restart: always
    image: "ohmimo/mimo-api:latest"
    env_file:
      - production.vars
      - api.vars
    command: bash -c "bundle exec rake db:create && rake db:migrate && bundle exec rake production:bootstrap && bundle exec rake assets:precompile && bundle exec puma -C /myapp/config/puma.rb"
    depends_on:
      - redis
      - db
    volumes:
        - shared-volume:/etc/mimo

  dashboard:
    restart: always
    image: "ohmimo/mimo-frontend"
    env_file:
      - production.vars
      - dashboard.vars
    environment:
      - NODE_ENV=production
    volumes:
        - shared-volume:/etc/mimo
    depends_on:
      - api
    healthcheck:
        test: ["CMD", "curl", "-f", "http://api:8008/api/v1/ping.json"]
        interval: 30s
        timeout: 1s
        retries: 5
        start_period: 30s

    # command: ["ls", "./wait-for-it.sh", "http://api:8080/api/v1/ping.json", "node", "server/app.js"]

  # worker:
  #   restart: always
  #   image: "ohmimo/mimo-worker"
  #   env_file:
  #     - production.vars
  #   environment:
  #     - RAILS_LOG_TO_STDOUT=true
  #     - RAILS_SERVE_STATIC_FILES=true
  #     - REDIS_HOST=redis
  #   command: bash -c "sidekiq"
  #   volumes:
  #       - shared-volume:/etc/mimo
  #   depends_on:
  #     - db
  #     - redis

volumes:
  shared-volume:
  nginx-config:
  nginx-certs:
  nginx-vhosts:
  nginx-webroot:
